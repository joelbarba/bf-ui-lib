image: cimg/node:18.16.0-browsers

pipelines:
  pull-requests:
    '**':
      - step:
          script:
            - CHROME_BIN=/usr/bin/google-chrome
            # Generates a .npmrc file configured for installing private modules
            # Taken from https://bitbucket.org/benjamincoe/private-modules-demo/src/master/bitbucket-pipelines.yml
            - printf "//`node -p \"require('url').parse(process.env.NPM_REGISTRY_URL || 'https://registry.npmjs.org').host\"`/:_authToken=${NPM_TOKEN}\nregistry=${NPM_REGISTRY_URL:-https://registry.npmjs.org}\n" >> ~/.npmrc
            - npm ci
            - npm run lint:ci
            - npm run test:ci
            - npm run build_lib # used to ensure changes pass AOT
            # Commented out until the Docker issue is resolved
            # - npm run e2e:ci

  branches:
    master:
    - step:
        name: Build and Test
        script:
          - printf "//`node -p \"require('url').parse(process.env.NPM_REGISTRY_URL || 'https://registry.npmjs.org').host\"`/:_authToken=${NPM_TOKEN}\nregistry=${NPM_REGISTRY_URL:-https://registry.npmjs.org}\n" >> ~/.npmrc
          - npm ci
          - npm run lint:ci
          - npm run test:ci:no-coverage
          - ./update_coverage_limits.sh
          - npm run build_lib

  custom:
    publish-lib:
      - variables:
          # [required] semver parameter to bump to a new version ['patch', 'minor', 'major']
          - name: version_bump

      - step:
          name: Publish
          script:
            - printf "//`node -p \"require('url').parse(process.env.NPM_REGISTRY_URL || 'https://registry.npmjs.org').host\"`/:_authToken=${NPM_TOKEN}\nregistry=${NPM_REGISTRY_URL:-https://registry.npmjs.org}\n" >> ~/.npmrc
            - npm ci
            - npm run lint:ci
            - npm run test:ci
            - npm run prepare:lib
            - declare -x LIB_VERSION=$(jq -r '.version' projects/bf-ui-lib/package.json)
            - npm publish ./dist/bf-ui-lib/blueface_npm-bf-ui-lib-$(echo $LIB_VERSION).tgz
            - declare -x TOKEN=$(curl -s -X POST -u "${OAUTH_CLIENT_ID}:${OAUTH_CLIENT_SECRET}" https://bitbucket.org/site/oauth2/access_token -d grant_type=client_credentials | jq --raw-output '.access_token')
            - git remote set-url origin "https://x-token-auth:${TOKEN}@bitbucket.org/bluefacedevs/bf-ui-lib"
            - git add .
            - git commit -m "Publishing bf-ui-lib version $LIB_VERSION [skip ci]"
            - git push && git push --tags

    whitesource-scan:
      - step:
          name: Whitesource Scan
          script:
          - printf "//`node -p \"require('url').parse(process.env.NPM_REGISTRY_URL || 'https://registry.npmjs.org').host\"`/:_authToken=${NPM_TOKEN}\nregistry=${NPM_REGISTRY_URL:-https://registry.npmjs.org}\n" >> ~/.npmrc
          - sed -i 's/{npmToken}/'"$NPM_TOKEN"'/' wss-unified-agent.config
          - sed -i 's/{whitesourceToken}/'"$WHITESOURCE_API_TOKEN"'/' wss-unified-agent.config
          - pipe: WhitesourceSoftware/whitesource-scan:1.5.0
