image: circleci/node:12-browsers

pipelines:
  default:
    - step:
        script:
          # Generates a .npmrc file configured for installing private modules
          # Taken from https://bitbucket.org/benjamincoe/private-modules-demo/src/master/bitbucket-pipelines.yml
          - printf "//`node -p \"require('url').parse(process.env.NPM_REGISTRY_URL || 'https://registry.npmjs.org').host\"`/:_authToken=${NPM_TOKEN}\nregistry=${NPM_REGISTRY_URL:-https://registry.npmjs.org}\n" >> ~/.npmrc
          - npm ci
          - npm run lint:ci
          - npm run test:ci
          - npm run build_lib # used to ensure changes pass AOT
          # Commented out until the Docker issue is resolved
          # - npm run e2e:ci

  branches:
    master:
    - step:
        script:
          - printf "//`node -p \"require('url').parse(process.env.NPM_REGISTRY_URL || 'https://registry.npmjs.org').host\"`/:_authToken=${NPM_TOKEN}\nregistry=${NPM_REGISTRY_URL:-https://registry.npmjs.org}\n" >> ~/.npmrc
          - npm ci
          - npm run lint:ci
          - npm run test:ci
          - ./update_coverage_limits.sh
          - npm run build_lib

  custom:
    publish-lib:
      - variables:
          # [required] semver parameter to bump to a new version ['patch', 'minor', 'major']
          - name: version_bump

      - step:
          name: Publish
          script:
            - printf "//`node -p \"require('url').parse(process.env.NPM_REGISTRY_URL || 'https://registry.npmjs.org').host\"`/:_authToken=${NPM_TOKEN}\nregistry=${NPM_REGISTRY_URL:-https://registry.npmjs.org}\n" >> ~/.npmrc
            - npm ci
            - npm run lint:ci
            - npm run test:ci
            - npm run prepare:lib
            - declare -x LIB_VERSION=$(jq -r '.version' projects/bf-ui-lib/package.json)
            - npm publish ./dist/bf-ui-lib/blueface_npm-bf-ui-lib-$(echo $LIB_VERSION).tgz
            - git add .
            - git commit -m "Publishing bf-ui-lib version $LIB_VERSION [skip CI]"
            - git push && git push --tags

