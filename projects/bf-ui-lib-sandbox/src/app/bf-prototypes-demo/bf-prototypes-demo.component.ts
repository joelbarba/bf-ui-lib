import { Component, OnInit } from '@angular/core';

console.log('before import');
// import { runFn } from 'projects/bf-ui-lib/src/lib/bf-prototypes/array.get-by-prop';
import BfPrototypes from 'projects/bf-ui-lib/src/lib/bf-prototypes/bf-prototypes';

BfPrototypes();
// BfPrototypes(['Array.getById']);
// BfPrototypes(['Array.getByProp']);

const a = 3;

const list = [{id:'1'}, {id:'2'}, {id:'3'}, {id:'4'}, [1,3,5, [9, 1, 2]]];
// console.log('RES', list.getById('3'));
// console.log('RES', list.getByProp('id', 3));
// console.log('RES', list.getIndexById('1'));
// console.log('RES', list.removeById('2'), list);
const list2 = list.dCopy();
list[4][0] = '99999';
list[4][3][1] = '99999';
console.log(list, list2);

@Component({
  selector: 'app-bf-prototypes-demo]',
  templateUrl: './bf-prototypes-demo.component.html',
  styleUrls: ['./bf-prototypes-demo.component.scss']
})
export class BfPrototypesDemoComponent implements OnInit {
  public name = BfPrototypesDoc.name;
  public desc = BfPrototypesDoc.desc;
  public api = BfPrototypesDoc.api;
  public instance = BfPrototypesDoc.instance;

  public instance2 = 
`<bf-prototypes</bf-prototypes>`;


  public cssReset = `$input-border: #ccc !default;
$optional_input_color : $input-border;
$disabled_input_color : #797979;
$primary_color        : #00B6F1;
$warning_color        : #ED0677;
$invalid_input_color  : $warning_color;

.bf-prototypes-form-group {
  ...
}`;


  public example1 =
`    const myArray = [{ id: '1' }, { id: '2' }, { id: '3' }];
    const item = myArray.getById('3');`;
  public example2 =
`    const myArray = [{ id: '1' }, { id: '2' }, { id: '3' }];
    const item = BfArray.getById(myArray, '3');`;
  public arrayT = `Array<T>`;
  public example3 = `import BfPrototypes from 'projects/bf-ui-lib/src/lib/bf-prototypes/bf-prototypes';
  
BfPrototypes(); // This will define all prototypes`;

  public example4 = `// This will define prototypes for only 3 functions
BfPrototypes([
  'Array.getById',
  'Array.getByProp',
  'Object.dCopy'
]);`;



  // ---- This is the logic to manage autogenerated code example ----
  public brStr = `\n`;
  public bsStr = `\n             `;
  public customCompCode = `<bf-dropdown [(ngModel)]="selObj" [bfList]="myList"></bf-dropdown>`;
  public compConf:any = {
    isRequired: false,
    isDisabled: false,
    rows: null,
    hasLabel: false,   labelText: 'My Description',
    hasTooltip: false, tooltipText: 'Hello World', tooltipPos: null, tooltipBody: false,
  };
  public upComp = () => {
    this.customCompCode = `<bf-textarea `;

    let compClasses = '';
    if (this.compConf.hasFullWidth) { compClasses += (!!compClasses.length ? ' ' : '') + 'full-width'; }
    if (this.compConf.hasSquash)    { compClasses += (!!compClasses.length ? ' ' : '') + 'squash'; }
    if (!!compClasses) {
      this.customCompCode += `class="${compClasses}"` + this.bsStr;
    }
    this.customCompCode += `[(ngModel)]="myVal"` + this.bsStr;
    this.customCompCode += `(ngModelChange)="doSomething($event)"`;

    if (this.compConf.hasLabel)   { this.customCompCode += this.bsStr + `bfLabel="${this.compConf.labelText}"`; }
    if (this.compConf.isRequired) { this.customCompCode += this.bsStr + `[bfRequired]="true"`; }
    if (this.compConf.isDisabled) { this.customCompCode += this.bsStr + `[bfDisabled]="true"`; }

    if (this.compConf.hasTooltip) {
      this.customCompCode += this.bsStr + `bfTooltip="${this.compConf.tooltipText}"`;
      if (!!this.compConf.tooltipPos)  { this.customCompCode += this.bsStr + `bfTooltipPos="${this.compConf.tooltipPos}"`; }
      if (!!this.compConf.tooltipBody) { this.customCompCode += this.bsStr + `bfTooltipBody="${this.compConf.tooltipBody}"`; }
    }

    this.customCompCode += (`>` + this.brStr + `</bf-textarea>`);
  };





  constructor() { }

  ngOnInit() { }

}


export const BfPrototypesDoc = {
  name    : `bf-prototypes`,
  uiType  : 'component',
  desc    : `Collection of helper functions to perform on basic variable types`,
  api     : `[bfText]: Button text`,
  instance: `<bf-prototypes></bf-prototypes>`, 
  demoComp: BfPrototypesDemoComponent
};
