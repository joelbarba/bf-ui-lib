import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-bf-loading-spinner-demo]',
  templateUrl: './bf-loading-spinner-demo.component.html',
  styleUrls: ['./bf-loading-spinner-demo.component.scss']
})
export class BfLoadingSpinnerDemoComponent implements OnInit {
  public name = BfLoadingSpinnerDoc.name;
  public desc = BfLoadingSpinnerDoc.desc;
  public api = BfLoadingSpinnerDoc.api;
  public instance = BfLoadingSpinnerDoc.instance;

  public innerInstance = `<span class="bf-loading"></span>`;


  // ---- This is the logic to manage autogenerated code example ----
  public brStr = `\n`;
  public bsStr = `\n             `;
  public customCompCode = `<bf-loading-spinner></bf-loading-spinner>`;
  public compConf: any = {
    size: 'xs',
    isCenter: false,
    centerPos: 'center',
  };
  public upComp = () => {
    this.customCompCode = `<bf-loading-spinner `;

    let compClasses = '';
    if (this.compConf.size !== 'xs') { compClasses += (!!compClasses.length ? ' ' : '') + this.compConf.size; }
    if (this.compConf.isCenter)      { compClasses += (!!compClasses.length ? ' ' : '') + this.compConf.centerPos; }
    if (!!compClasses) {
      this.customCompCode += `class="${compClasses}"`;
    }
    this.customCompCode += (`>` + `</bf-loading-spinner>`);
  };

  public sizeCss = {
   sm: `<bf-loading-spinner class="sm"></bf-loading-spinner>`,
   md: `<bf-loading-spinner class="md"></bf-loading-spinner>`,
   lg: `<bf-loading-spinner class="lg"></bf-loading-spinner>`,
   xl: `<bf-loading-spinner class="xl"></bf-loading-spinner>`,
  };

  public centerCss = {
   top    : `<bf-loading-spinner class="center-top"></bf-loading-spinner>`,
   right  : `<bf-loading-spinner class="center-right"></bf-loading-spinner>`,
   left   : `<bf-loading-spinner class="center-left"></bf-loading-spinner>`,
   bottom : `<bf-loading-spinner class="center-bottom"></bf-loading-spinner>`,
  };





  constructor() { }

  ngOnInit() {
    this.upComp();
  }

}


export const BfLoadingSpinnerDoc = {
  name    : `bf-loading-spinner`,
  uiType  : 'component',
  desc    : `Generates an element with a spinning circle to represent a loading status`,
  api     : `No parameters. Just applicable css classes.`,
  instance: `<bf-loading-spinner></bf-loading-spinner>`,
  demoComp: BfLoadingSpinnerDemoComponent
};
