// Define CSS variables (IEexplorer does not support it)
$bf-colors: (
  'primary'     : $primary_color,
  'secondary'   : $secondary_color,
  'tertiary'    : $tertiary_color,
  'quaternary'  : $quaternary_color,
  'warning'     : $warning_color,
  'extra'       : $extra_color,
  'white'       : $white,
  'disabled'    : $disabled-color
);
:root {
  @each $color, $value in $bf-colors {
    --#{$color}: #{$value};
    .#{$color}-text { color: #{$value}; }
    .text-#{$color} { color: #{$value}; }
    .#{$color} { color: #{$value}; }
  }
}

$input-border: #ccc !default; // <-- this is a bootstrap default
$optional_input_color : $input-border;
$disabled_input_color : #797979;
$invalid_input_color  : $warning_color;
$valid_input_color    : $primary_color;
$required_input_color : $primary_color;

$radio-color: #525254; // $text-color;



// --- <bf-btn> color reset ----------------------------------------------------
@mixin btn-color-mixin($btn-color) {
  color: white;
  background: $btn-color;
  .btn-icon-section { background: darken($btn-color, 5%); }
  .btn-icon-section.small-btn { background: $btn-color; } // If icon btn
  &:hover:not(:disabled) {
    background: darken($btn-color, 3%);
    .btn-icon-section { background: darken($btn-color, 7%); }
  }
}
@each $color, $value in $bf-colors {
  .#{$color}.bf-btn  { @include btn-color-mixin($value); }
}


// --- <bf-checkbox> color reset --------------------------------------------------
div.checkbox label input[type='checkbox'] {
  + span.check-box {  // Box unmarked (unchecked)
    background: $white;
    border-color: $primary_color;
  }

  &:checked + span.check-box {  // Box marked (checked)
    background: $primary_color;
    border-color: darken($primary_color, 3%);
    &:before { color: $white; }
  }

  &[disabled] + span.check-box {  // Box disabled (checked or unchecked)
    background: $disabled-color;
    border-color: darken($disabled-color, 3%);
  }
}

// --- <bf-radio> color reset --------------------------------------------------
div.radio label input[type='radio'] {
  + span.radio-box {
    border-color: darken($radio-color, 3%);
  }

  &:checked + span.radio-box {  // Selected (checked)
    background: $radio-color;
    &:before { color: $white; }
  }

  &[required]:not([disabled]) { // Required
    &:checked + span.radio-box { background: $required_input_color; }
    + span.radio-box {
      border-color: darken($required_input_color, 3%);
    }
  }

  &[disabled] + span.radio-box {  // Disabled
    background: $disabled-color;
    border-color: darken($disabled-color, 3%);
  }
}



// --- <bf-label> color reset --------------------------------------------------
label.is-required {
  color: $primary_color;
}


// --- <bf-switch> color reset --------------------------------------------------
div.bf-switch {

  // Background bar
  .switch-bar {
    background: white;
    border-color: #ccc;
  }

  // Text color (ON/OFF)
  .switch-value {
    //.bf-switch-off-text { color: red; }
    //.bf-switch-on-text  { color: green; }
  }

  // Switch color
  .switch-lever {
    color: white;
    background: #f3f3f3;
    &.is-on  { background: $primary_color; }
    //&.is-off { background: red; }
  }

  &.is-disabled {
    .switch-bar   { background: #d4d4d4; }
    .switch-lever { background: #f3f3f3; }
  }
}




// --- <bf-switch> color reset --------------------------------------------------
.bf-dropdown {
  select.form-control { // Placeholder color (https://developer.mozilla.org/en-US/docs/Web/CSS/::placeholder)
    &::-webkit-input-placeholder { color: $optional_input_color; } /* WebKit, Blink, Edge */
    &:-moz-placeholder           { color: $optional_input_color; opacity:  1; } /* Mozilla Firefox 4 to 18 */
    &::-moz-placeholder          { color: $optional_input_color; opacity:  1; } /* Mozilla Firefox 19+ */
    &:-ms-input-placeholder      { color: $optional_input_color; } /* Internet Explorer 10-11 */
    &::-ms-input-placeholder     { color: $optional_input_color; } /* Microsoft Edge */
    &::placeholder               { color: $optional_input_color; } /* Most modern browsers support this now. */
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
    border: 1px solid $optional_input_color;
    &:focus { box-shadow: 0 0 0 2px rgba($optional_input_color, 0.35); }
  }
  &.is-disabled select.form-control {
    color: $disabled_input_color;
  }
  &.is-required select.form-control {
    border-color: $primary_color;
    &:focus { box-shadow: 0 0 0 2px rgba($primary_color, 0.20); }
  }
}



// --------------------------------------------------------------
// This is to reset the Growl colors:
div.growl-wrapper {
  .msg-box.success {
    background: darken($primary_color, 15%);
    color: white;
  }
  .msg-box.error {
    background: $warning_color;
    color: white;
  }
}



// --------------------------------------------------------------
// This is to reset the bf-list-paginator colors:
$primary_color: #00B6F1;
$page_bg: white;
$page_color: darken($primary_color, 10%);
$page_border_color: #c0c0c0;
$page_hover_bg: #eeeeee;

div.bf-list-paginator {
  .page-buttons {
    .page-btn {
      border-color: $page_border_color;
      color: $page_color;
      background: $page_bg;
      &:not(.disabled):hover { background: $page_hover_bg; }
      &.current {
        color: $page_bg;
        background: $page_color;
        &:hover { background: $page_color; }
      }
    }
  }
}



// --- <bf-input> color reset (Splice ngJS)-----------------------------------------------------------
// -- This styles the bf-input to behave exactly like the old <bf-input> in the old Splice portal (AngularJS)
$optional_input_color : $input-border; // <-- this is a bootstrap default
$focused_input_color  : darken($primary_color, 20%);
$required_input_color : $primary_color;
$invalid_input_color  : $warning_color;
$valid_input_color    : $primary_color;
$disabled_input_color : #797979;

.bf-input-form-group {
  &.is-required .bf-input-inner-icon {
    color: $required_input_color; // Icon into the input to add info or error alert
  }
  .bf-input-inner-icon {
    &.bf-icon-error { color: $invalid_input_color; }
    &.bf-icon-valid { color: $valid_input_color; }
    &.bf-icon-loading { color: $valid_input_color; }
  }
  input.form-control {
    border: 1px solid $optional_input_color;
    &:focus { border-color: $focused_input_color; }
  }
  &.is-disabled input.form-control { color: $disabled_input_color; }
  &.is-required  input.form-control {
    border-color: $required_input_color;
    &:focus { border-color: $focused_input_color; }
  }

  label { transition-property: color; transition-duration: 0.2s; }
  &.is-focus label { color: $focused_input_color; }

  &.is-error {
    label { color: $invalid_input_color; }
    input.form-control { border-color: $invalid_input_color; }
    input.form-control:focus { border-color: $invalid_input_color; }
    .bf-input-error-text { color: $invalid_input_color; }
  }

  // Addon buttons
  .btn.btn-outline-secondary {
    border-color: $valid_input_color;
    background: $valid_input_color;
    color: $white;
    //transition-property: none;
    &:active:not(.disabled) {
      //  box-shadow: inset 2px 2px 5px rgba(34, 36, 38, 0.4);
      border-color: $valid_input_color;
      background: $valid_input_color;
    }
  }
  &.is-focus .btn.btn-outline-secondary {
    border-color: $focused_input_color;
    background: $focused_input_color;
  }
  &.is-error .btn.btn-outline-secondary, &.is-error .btn.btn-outline-secondary:active {
    border-color: $invalid_input_color;
    background: $invalid_input_color;
  }


  input.form-control:focus { box-shadow: none; }  // Remove it from Bootstrap
}


// --- <bf-input> color reset (New Splice ng8)-----------------------------------------------------------
// -- This styles the bf-input with some improvements (to be applied after the migration is completed)
//$input-border: #ccc !default; // <-- this is a bootstrap default
//$optional_input_color : $input-border;
//$input_focus_color : blue;
//$required_input_color : $primary_color;
//$invalid_input_color  : $warning_color;
//$valid_input_color    : $primary_color;
//$disabled_input_color : #797979;
//
//.bf-input-form-group {
//  &.is-required .bf-input-inner-icon {
//    color: $required_input_color; // Icon into the input to add info or error alert
//  }
//  .bf-input-inner-icon {
//    &.bf-icon-error { color: $invalid_input_color; }
//    &.bf-icon-valid { color: $valid_input_color; }
//    &.bf-icon-loading { color: $valid_input_color; }
//  }
//  input.form-control { // Placeholder color (https://developer.mozilla.org/en-US/docs/Web/CSS/::placeholder)
//    &::-webkit-input-placeholder { color: $optional_input_color; } /* WebKit, Blink, Edge */
//    &:-moz-placeholder           { color: $optional_input_color; opacity:  1; } /* Mozilla Firefox 4 to 18 */
//    &::-moz-placeholder          { color: $optional_input_color; opacity:  1; } /* Mozilla Firefox 19+ */
//    &:-ms-input-placeholder      { color: $optional_input_color; } /* Internet Explorer 10-11 */
//    &::-ms-input-placeholder     { color: $optional_input_color; } /* Microsoft Edge */
//    &::placeholder               { color: $optional_input_color; } /* Most modern browsers support this now. */
//    box-shadow: inset 0 2px 2px rgba(0, 0, 0, .075);
//    border: 1px solid $optional_input_color;
//    &:focus {
//      box-shadow: 0 0 2px 2px rgba($optional_input_color, 0.35);
//    }
//  }
//  &.is-disabled input.form-control { color: $disabled_input_color; }
//  &.is-required  input.form-control {
//    border-color: $primary_color;
//    &:focus { box-shadow: 0 0 2px 2px rgba($primary_color, 0.20); }
//  }
//  &.is-error {
//    label { color: $warning_color; }
//    input.form-control {
//      border-color: $warning_color;
//      &:focus { box-shadow: 0 0 2px 2px rgba($warning_color, 0.20); }
//    }
//    .bf-input-error-text { color: $invalid_input_color; }
//  }
//}




// --- <bf-textarea> color reset --------------------------------------------------
.bf-textarea-form-group {
  textarea.form-control {
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
    border: 1px solid $optional_input_color;
    &:focus {
      box-shadow: 0 0 0 2px rgba($optional_input_color, 0.35);
      border: 1px solid $focused_input_color;
    }
  }
  &.is-disabled textarea.form-control {
    color: $disabled_input_color;
  }
  &.is-required  textarea.form-control {
    border-color: $primary_color;
    &:focus { box-shadow: 0 0 0 2px rgba($primary_color, 0.20); }
  }
  &.is-error {
    label { color: $warning_color; }
    textarea.form-control {
      border: 1px solid $warning_color;
      &:focus {
        box-shadow: 0 0 0 2px rgba($warning_color, 0.20);
        border: 1px solid $warning_color;
      }
    }
    .bf-textarea-error-text {
      color: $invalid_input_color;
    }
  }
}
